name: assistant # you probably want to 'snapcraft register <name>'
base: core18 # the base snap is the execution environment for this snap
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: Single-line elevator pitch for your amazing snap # 79 char long summary
description: |
  This is my-snap's description. You have a paragraph or two to tell the
  most important story about your snap. Keep it under 100 words though,
  we live in tweetspace and your description wants to look good in the snap
  store.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots


parts:
  alsa-mixin: # Not working inside snap with root privileges
    plugin: dump
    source: https://github.com/diddlesnaps/snapcraft-alsa.git
    source-subdir: snapcraft-assets
    build-packages:
      - libasound2-dev
    stage-packages:
      - libasound2
      - libasound2-plugins

  jinni-assistant:
    plugin: dump
    source: .
    override-build: |
      sudo scripts/bashScripts/nativeExecutableMaker.sh  # Downloading dart-sdk for the correct architecture.

      cd scripts/bashScripts/
      ./compileAllCFiles.sh # Have to be executed when working directory is this file location
      cd ../..

      rm -r Assistant

      snapcraftctl build

    build-packages:
      - wget
      - unzip
      - git
      - gcc
      - make
      - libatlas-base-dev
      - libasound-dev
      - g++
    stage-packages:
      - libatlas-base-dev
      - libevent-dev


layout: # Taneling the alsa comands inside the snap to the alsa on the device
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib


apps:
  assistant:
    command-chain: ["snap/command-chain/alsa-launch"]
    command: main.exe $SNAP
#    daemon: simple
    plugs: [network, network-bind, gpio, hardware-observe, audio-playback, audio-record, pulseaudio, alsa]
